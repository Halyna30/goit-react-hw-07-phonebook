{"version":3,"sources":["components/FormContacts/FormContacts.module.css","Redux/actions.js","Redux/operations.js","Redux/contacts-selectors.js","components/FormContacts/FormContacts.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ListContacts/ListContacts.jsx","App.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","contactId","delete","get","getFilter","state","contacts","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","FormContacts","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","this","className","s","form","type","input","onChange","pattern","title","required","disabled","Component","connect","e","ContactItem","onDelete","id","onClick","handleDelete","fetchContacts","operations","useEffect","map","onAddContact","onChangeFilter","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d9fbd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1ViBq\",\"input\":\"FormContacts_input__2zB3H\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactssError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const allContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [allContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.name === '') {\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className=\"label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={s.input}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"label\">\n          Phone Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            className={s.input}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={name === '' || number === '' ? true : false}\n          className=\"btn\"\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default FormContacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../Redux/actions';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"container\">\n    <label className=\"label\">\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} className=\"input\" />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, number, name } = contact;\n\n  const handleDelete = id => onDelete(id);\n\n  return (\n    <li key={id} id={id} className=\"contact\">\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" className=\"btn\" onClick={() => handleDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../Redux/operations';\nimport ContactItem from '../ContactItem';\nimport { getVisibleContacts } from '../../Redux/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nconst ListContacts = ({ contacts, onDelete, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <ul className=\"container list\">\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n  onDelete: id => dispatch(operations.deleteContact(id)),\n});\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport operations from './Redux/operations';\nimport { getFilter } from './Redux/contacts-selectors';\nimport { changeFilter } from './Redux/actions';\nimport FormContacts from './components/FormContacts/FormContacts';\nimport Filter from './components/Filter/Filter';\nimport ListContacts from './components/ListContacts/ListContacts';\n\nconst App = ({ filter, onAddContact, onChangeFilter }) => {\n  return (\n    <>\n      <h1 className=\"title\">Phonebook</h1>\n      <FormContacts onSubmit={onAddContact} />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter value={filter} onChange={onChangeFilter} />\n\n      <ListContacts />\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(operations.addContact(contact)),\n  onChangeFilter: value => dispatch(changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}